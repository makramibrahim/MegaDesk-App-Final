@{
    Layout = "~/_Layout.cshtml";
    Page.Title = "Edit a Quote";

    MegaDesk_WebApplication.DeskQuote deskQuote = new MegaDesk_WebApplication.DeskQuote();

    var clientName = "";
    var quoteDate = DateTime.Now;
    var deskWidth = 0;
    var deskDepth = 0;
    var material = "";
    var deskDrawers = 0;
    var rushDays = 0;
    var PriceQuote = 0;
    var quoteId = "";

    if (!IsPost)
    {
        if (!Request.QueryString["ID"].IsEmpty() && Request.QueryString["ID"].IsInt())
        {
            quoteId = Request.QueryString["ID"];
            var db = Database.OpenConnectionString("Data Source=|DataDirectory|\\MegaDeskDB.sdf", "System.Data.SqlServerCe.4.0");
            var dbCommand = "SELECT * FROM MegaDeskTB WHERE ID = @0";
            var row = db.QuerySingle(dbCommand, quoteId);

            if (row != null)
            {
                clientName = row.ClientName;
                deskWidth = int.Parse(row.DeskWidth.ToString());
                deskDepth = int.Parse(row.DeskDepth.ToString());
                material = row.Material;
                deskDrawers = int.Parse(row.DeskDrawers.ToString());
                rushDays = int.Parse(row.RushDays.ToString());
            }
            else
            {
                Validation.AddFormError("There was no data  selected");

            }
        }

        else
        {
            Validation.AddFormError("There was no data  selected");

        }
    }

    if (IsPost)
    {
        Validation.RequireField("clientName", "*");
        Validation.RequireField("deskWidth", "*");
        Validation.Add("deskWidth", Validator.Range(12, 96, "Width must be between 12 and 96"));
        Validation.RequireField("deskDepth", "*");
        Validation.Add("deskDepth", Validator.Range(12, 48, "Depth must be between 12 and 48"));
        Validation.RequireField("material", "*");
        Validation.RequireField("rushDays", "*");


        /*************************************************
        * GET the total cost: 
        * ***********************************************/
        clientName = Request.Form["ClientName"];
        deskWidth = Request.Form["DeskWidth"].AsInt();
        deskDepth = Request.Form["DeskDepth"].AsInt();
        material = Request.Form["Material"];
        deskDrawers = Request.Form["DeskDrawers"].AsInt();
        rushDays = Request.Form["RushDays"].AsInt();
        Enum.TryParse(material, out MegaDesk_WebApplication.SurfaceMaterials surfaceMaterials);

        quoteId = Request.Form["quoteId"];



        if (Validation.IsValid())
        {
            var db = Database.OpenConnectionString("Data Source=|DataDirectory|\\MegaDeskDB.sdf");
            var updateCommand = "UPDATE MegaDeskTB SET ClientName = @0, RushDays = @1, Material = @2, DeskWidth = @3, DeskDepth = @4, OrderDate = @5, PriceQuote = @6, DeskDrawers = @7 WHERE Id = @8";

            deskQuote = new MegaDesk_WebApplication.DeskQuote(clientName, quoteDate, deskWidth, deskDepth, deskDrawers, surfaceMaterials, rushDays);
            PriceQuote = int.Parse(deskQuote.CalQuoteTotal().ToString());

            db.Execute(updateCommand, clientName, rushDays, material, deskWidth, deskDepth, quoteDate, PriceQuote, deskDrawers, quoteId);
            Response.Redirect("~/DisplayQuote.cshtml");

        }
    }
}


<div class="container" style="margin-bottom:200px;">
    <h2>Edit Quote</h2><br />
    <form class="form-group" method="post">
        <p name="deskDepth" value="@DateTime.Now">@quoteDate</p>
        <div class="row">
            <div class="col">

                @Html.ValidationMessage("clientName")
                <label class="col-form-label" for="inputDefault">Client Name</label>
                <input type="text" class="form-control" name="clientName" value="@clientName" />

                @Html.ValidationMessage("rushDays")
                <label class="col-form-label" for="inputDefault">Rush Days</label>
                @*<input type="text" class="form-control" name="rushDays" value="@Request.Form["rushDays"]" />*@
                <select class="form-control" name="rushDays" value="@rushDays">
                    <option>0</option>
                    <option>3</option>
                    <option>5</option>
                    <option>7</option>
                </select>


                @Html.ValidationMessage("material")
                <label class="col-form-label" for="inputDefault">Material</label>
                @*<input type="text" class="form-control" value="@Request.Form["material"]" />*@
                <select class="form-control" name="material" value="@material">
                    <option></option>
                    <option>Laminate</option>
                    <option>Oak</option>
                    <option>Rosewood</option>
                    <option>Veneer</option>
                    <option>Pine</option>
                </select>

            </div>
            <div class="col">

                @Html.ValidationMessage("deskWidth")
                <label class="col-form-label" for="inputDefault">Desk Wdith</label>
                <input type="text" class="form-control" name="deskWidth" value="@deskWidth" />

                @Html.ValidationMessage("deskDepth")
                <label class="col-form-label" for="inputDefault">Desk Depth</label>
                <input type="text" class="form-control" name="deskDepth" value="@deskDepth" />

                @Html.ValidationMessage("deskDrawers")
                <label class="col-form-label" for="inputDefault">Drawers</label>
                <select class="form-control" name="deskDrawers" value="@deskDrawers">
                    @for (int i = 1; i <= 7; i++)
                    {
                        <option>@i</option>
                    }

                </select>
            </div>
        </div>
        <br>
        <button class="btn btn-success" type="submit" name="SubmitBtn" value="Add Scripture">Submit Chanages</button>

        <input type="hidden" class="form-control" name="quoteId" value="@quoteId">
    </form>

</div>